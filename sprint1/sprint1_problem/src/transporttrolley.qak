System transporttrolley_system

Request depositRequest : depositRequest(MATERIAL, QUANTITY)
Reply pickupDone : pickupDone(RESULT)

Context ctxwasteservice_trolley ip [host="localhost" port=8050]


QActor transporttrolley_t context ctxwasteservice_trolley {
	[# 
		lateinit var Mat: ws.Material
		var Qty: Float
	#]
	
	State init initial {
		println("\tTRANSPORTTROLLEY | started...")	
	}
	Goto idle
	
	State idle {
		println("\tTRANSPORTROLLEY | waiting for requests...")
	}
	Transition t0 whenRequest depositRequest -> handleDepositRequest
	
	State handleDepositRequest {
		updateResource [# "transporttrolley(handleDepositRequest)" #]

		println("\tTRANSPORTTROLLEY | moving to indoor")
		updateResource [# "transporttrolley(moving_Indoor)" #]
		delay 1000
		println("\tTRANSPORTTROLLEY | arrived to indoor")
		updateResource [# "transporttrolley(arrived_Indoor)" #]
		
		onMsg(depositRequest : depositRequest(MATERIAL, QUANTITY)) {
			[# Mat = ws.Material.valueOf(payloadArg(0)) #]
			[# Qty = payloadArg(1).toFloat() #]
			
			replyTo depositRequest with pickupDone : pickupDone(ok)
		}
	}
	Goto moveToGlassBox if [# Mat == ws.Material.GLASS #] else moveToPlasticBox
	
	State moveToPlasticBox {
		println("\tTRANSPORT TROLLEY | moving to PlasticBox")
		updateResource [# "transporttrolley(moving_PlasticBox)" #]
		delay 1000
		println("\tTRANSPORT TROLLEY | arrived to PlasticBox")
		updateResource [# "transporttrolley(arrived_PlasticBox)" #]
	}
	Goto doDeposit
	
	State moveToGlassBox {
		println("\tTRANSPORT TROLLEY | moving to GlassBox")
		updateResource [# "transporttrolley(moving_GlassBox)" #]
		delay 1000
		println("\tTRANSPORT TROLLEY | arrived to GlassBox")
		updateResource [# "transporttrolley(arrived_GlassBox)" #]
	}
	Goto doDeposit
	
	State doDeposit {
		println("\tTRANSPORT TROLLEY | doing the deposit")
		delay 500
		println("\tTRANSPORT TROLLEY | deposit done")
		updateResource [# "transporttrolley(depositDone)" #]
	}
	Goto endRequest
	
	State endRequest {
		println("\tTRANSPORTTROLLEY | moving back to home")
		updateResource [# "transporttrolley(moving_Home)" #]
		delay 1000
		println("\tTRANSPORTTROLLEY | arrived to home")
		updateResource [# "transporttrolley(arrived_Home)" #]
	}
	Transition t1 whenRequest depositRequest -> handleDepositRequest
}